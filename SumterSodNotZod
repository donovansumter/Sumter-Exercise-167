//AUTHOR: Donovan Sumter
//COURSE: CPT 167
//PURPOSE: To calculate costs of products based on discount rates as well as count the amount of transactions made.
//STARTDATE: 2-18-2020

package edu.cpt167.sumter.participation;

import java.util.Scanner;

public class SodNotZod 
{
	//CLASS CONSTANTS
	public static final double DISCOUNT_RATE_MEMBER = 0.15;
	public static final double DISCOUNT_RATE_SENIOR = 0.25;
	public static final double DISCOUNT_RATE_NONE = 0.0;
	public static final double TAX_RATE = 0.075;
	public static final String DISCOUNT_NAME_SENIOR = "Senior";
	public static final String DISCOUNT_NAME_MEMBER = "Member";
	public static final String DISCOUNT_NAME_NONE = "None";
	public static final double ITEM_PRICE_PREMIUM = 5.00;
	public static final double ITEM_PRICE_SPECIAL = 2.50;
	public static final double ITEM_PRICE_BASIC = 1.00;
	public static final String ITEM_NAME_PREMIUM = "Golden Sod";
	public static final String ITEM_NAME_SPECIAL = "Fresh Sod";
	public static final String ITEM_NAME_BASIC = "Sod";
	public static final int RESET_VALUE = 0;
	public static final int MAX_PURCHASE_COUNTER = 3;
		
	public static void main(String[] args) 
	{
		Scanner input = new Scanner(System.in);
		
		//VARIABLES
		String userName = "";
		char menuSelection = ' ';
		char itemSelection = ' ';
		int howMany = 0;
		double discountRate = 0.0;
		String discountName = "";
		String itemName = "";
		double itemPrice = 0.0;
		double discountAmt = 0.0;
		double discountPrice = 0.0;
		double subTotal = 0.0;
		double tax = 0.0;
		double totalCost = 0.0;
		double grandTotal = 0.0;
		int seniorTransaction = 0;
		int memberTransaction = 0;
		int noneTransaction = 0;
		int totalTransaction = 0;
		int purchaseCounter = 0;
		
		//WELCOME BANNER
		displayWelcomeBanner();
		
		//INPUT PHASE
		userName = getUserName(input);
		
		//MAIN MENU
		menuSelection = validateMenuSelection(input);
		
		//NOT QUIT LOOP
		while (menuSelection != 'Q')
		{
			while (purchaseCounter > MAX_PURCHASE_COUNTER)
			{
				System.out.println("******RESETING PURCHASE COUNTER******");
				purchaseCounter = RESET_VALUE;
				menuSelection = validateMenuSelection(input);
			}//END OF purchaseCounter test
			
			//ITEM MENU
			itemSelection = validateItemSelection(input);
			
			//HOW MANY MENU
			howMany = validateHowMany(input);
			
			//PROCESS PHASE
			if (menuSelection == 'A')
			{
				discountRate = DISCOUNT_RATE_MEMBER;
				discountName = DISCOUNT_NAME_MEMBER;
				memberTransaction++;
				totalTransaction++;
			}
			else if (menuSelection == 'B')
			{
				discountRate = DISCOUNT_RATE_SENIOR;
				discountName = DISCOUNT_NAME_SENIOR;
				seniorTransaction++;
				totalTransaction++;
			}
			else
			{
				discountRate = DISCOUNT_RATE_NONE;
				discountName = DISCOUNT_NAME_NONE;
				noneTransaction++;
				totalTransaction++;
			}
			
			if (itemSelection == 'A')
			{
				itemName = ITEM_NAME_PREMIUM;
				itemPrice = ITEM_PRICE_PREMIUM;
			}
			else if (itemSelection == 'B')
			{
				itemName = ITEM_NAME_SPECIAL;
				itemPrice = ITEM_PRICE_SPECIAL;
			}
			else
			{
				itemName = ITEM_NAME_BASIC;
				itemPrice = ITEM_PRICE_BASIC;
			}
			
			discountAmt = itemPrice * discountRate;
			discountPrice = itemPrice - discountAmt;
			subTotal = howMany * discountPrice;
			tax = subTotal * TAX_RATE;
			totalCost = subTotal + tax;
			grandTotal = grandTotal + totalCost;
			
			//OUTPUT PHASE
			displayItemReceipt(itemName, discountName, itemPrice, discountAmt, discountPrice, subTotal, tax, totalCost, howMany);
			purchaseCounter++;
			
			//MAIN MENU
			menuSelection = validateMenuSelection(input);
		}//END OF not quit loop
				
		//FINAL REPORT TEST
		if (grandTotal > 0.0)
		{
			displayFinalReport(grandTotal, memberTransaction, seniorTransaction, noneTransaction, totalTransaction);
		}//END OF displayFinalReport test
				
		displayFarewellMessage(userName);
		
		input.close();

	}//END OF main method
	
	public static void displayWelcomeBanner()
	{
		System.out.println("Welcome to the newest SodNotZod calculator.");
		System.out.println("This new program will calculate sales and print");
		System.out.println("an end of the day report with all total");
		System.out.println("transactions listed.");
		
	}//END OF WelcomeBanner method
	
	public static String getUserName(Scanner input)
	{
		String localUserName = "";
		System.out.println("To begin, can I have your name please?");
		localUserName = input.next();
		return localUserName;
	}
	
	public static void displayMainMenu()
	{
		System.out.println("**************MAIN MENU*******************");
		System.out.printf("%-10s%10s\n", "[A] for", DISCOUNT_NAME_MEMBER); 
		System.out.printf("%-10s%10s\n", "[B] for", DISCOUNT_NAME_SENIOR);
		System.out.printf("%-10s%10s\n", "[C] for", DISCOUNT_NAME_NONE);
		System.out.println("");
		System.out.printf("%-10s%10s\n", "[Q] for", "Quit System");
		System.out.println("******************************************");
		System.out.println("Please enter the character associated with your");
		System.out.println("discount type. Enter 'Q' to leave the system.");
	}//END OF MainMenu method
	
	public static char validateMenuSelection(Scanner borrowedinput)
	{
		char tempMenuSelection = ' ';
		displayMainMenu();
		tempMenuSelection = borrowedinput.next().toUpperCase().charAt(0);
		
		while (tempMenuSelection != 'A' && tempMenuSelection != 'B' && tempMenuSelection != 'C' && tempMenuSelection != 'Q')
		{
			System.out.println("XXXXXX  INVALID-ENTRY  XXXXXX");
			displayMainMenu();
			tempMenuSelection = borrowedinput.next().toUpperCase().charAt(0);
		}//END OF valid menu selection test
		
		return tempMenuSelection;
	}//END OF validateMenuSelection method
	
	public static void displayItemMenu()
	{
		System.out.println("**************ITEM MENU*******************");
		System.out.printf("%-10s%10s%3s%3.2f\n", "[A] for", ITEM_NAME_PREMIUM, "$", ITEM_PRICE_PREMIUM);
		System.out.printf("%-10s%10s%3s%3.2f\n", "[B] for", ITEM_NAME_SPECIAL, "$", ITEM_PRICE_SPECIAL);
		System.out.printf("%-10s%10s%3s%3.2f\n", "[C] for", ITEM_NAME_BASIC, "$", ITEM_PRICE_BASIC);
		System.out.println("******************************************");
		System.out.println("Please enter the character associated with your");
		System.out.println("discount type.");
	}//END OF ItemMenu method
	
	public static char validateItemSelection(Scanner borrowedinput)
	{
		char tempItemSelection = ' ';
		displayItemMenu();
		tempItemSelection = borrowedinput.next().toUpperCase().charAt(0);
		
		while (tempItemSelection != 'A' && tempItemSelection != 'B' && tempItemSelection != 'C')
		{
			System.out.println("XXXXXX  INVALID-ENTRY  XXXXXX");
			displayItemMenu();
			tempItemSelection = borrowedinput.next().toUpperCase().charAt(0);
		}//END OF valid item selection test
		
		return tempItemSelection;
	}//END OF validateItemSelection method
	
	public static void displayHowManyMenu()
	{
		System.out.println("How many bags of sod will you need?");
	}//END OF displayHowManyMenu method
	
	public static int validateHowMany(Scanner borrowedinput)
	{
		int tempHowMany = 0;
		displayHowManyMenu();
		tempHowMany = borrowedinput.nextInt();
		
		while (tempHowMany < 0)
		{
			System.out.println("XXXXXX  INVALID-ENTRY  XXXXXX");
			displayHowManyMenu();
			tempHowMany = borrowedinput.nextInt();
		}//END OF valid how many test
		
		return tempHowMany;
	}//END OF validateHowMany method
	
	public static void displayItemReceipt(String itemName, String discountName, double itemPrice, double discountAmt, double discountPrice, double subTotal, double tax, double totalCost, int howMany)
	{
		System.out.println("**************RECIEPT*********************");
		System.out.printf("%-10s%21s\n", "Item Name:", itemName);
		System.out.printf("%-10s%10s%3.2f\n", "Item Price:","$", itemPrice);
		System.out.printf("%-10s%14d\n", "How Many:", howMany);
		System.out.printf("%-10s%13s\n", "Discount Name:", discountName);
		System.out.printf("%-10s%5s%3.2f\n", "Discount Amount:","$", discountAmt);
		System.out.printf("%-10s%6s%3.2f\n", "Discount Price:","$", discountPrice);
		System.out.printf("%-10s%11s%3.2f\n", "Sub Total:","$", subTotal);
		System.out.printf("%-10s%11s%3.2f\n", "Tax:","$", tax);
		System.out.printf("%-10s%10s%3.2f\n", "Total Cost:","$", totalCost);
		System.out.println("******************************************");
		System.out.println("");
	}//END OF ItemReceipt method
	
	public static void displayFinalReport(double grandTotal, int memberTransaction, int seniorTransaction, int noneTransaction, int totalTransaction)
	{
		System.out.println("--------------END OF DAY REPORT----------------------");
		System.out.printf("%-10s%13d\n", "Member Transactions:", memberTransaction);
		System.out.printf("%-10s%13d\n", "Senior Transactions:", seniorTransaction);
		System.out.printf("%-10s%7d\n", "Non-Discount Transactions:", noneTransaction);
		System.out.printf("%-10s%14d\n", "Total Transactions:", totalTransaction);
		System.out.printf("%-10s%20s%3.2f\n", "Grand Total:", "$", grandTotal);
		System.out.println("-----------------------------------------------------");
	}//END OF Final Report Method
	
	public static void displayFarewellMessage(String userName)
	{
		System.out.println("Thank for using this program, " + userName + ", Have a Great Day!");
	}//END OF displayFarewellMessage method
	
}//END OF class
